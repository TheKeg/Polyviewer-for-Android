precision mediump float;

uniform mat4 mvpMatrix;
uniform mat4 modelMatrix;

attribute vec4 aPosition;
attribute vec3 aNormal;
attribute vec2 aTextureCoord;

varying vec2 vTextureCoord;
varying vec3 vTangent;
varying vec3 vBinormal;
varying vec3 vNormal;

void main()
{	
	// calculate the tangent & binormal - should find a better way
	vec3 tangent; 
	vec3 binormal; 
	
	vec3 c1 = cross(aNormal, vec3(0.0, 0.0, 1.0)); 
	vec3 c2 = cross(aNormal, vec3(0.0, 1.0, 0.0)); 
	
	if(length(c1) > length(c2))
	{
		tangent = c1;	
	}
	else
	{
		tangent = c2;	
	}
	
	tangent = normalize(tangent);
	binormal = cross(tangent, aNormal);
	
	vTangent = vec3((modelMatrix * vec4(tangent, 0)).xyz);
	vBinormal = vec3((modelMatrix * vec4(binormal, 0)).xyz);
	vNormal = vec3((modelMatrix * vec4(aNormal, 0)).xyz);
	vTextureCoord = aTextureCoord;

	gl_Position = mvpMatrix * aPosition;
}